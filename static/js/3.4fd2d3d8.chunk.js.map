{"version":3,"sources":["displayThemes/components/themes/SlideShow/post.js"],"names":["Posts","state","id","props","activeData","onZoomStyleLoad","mediaClass","newApi","setState","fade","setTimeout","wall","Personalization","signageTheme","addNetwork","name","scrlBarComan","document","querySelector","setAttribute","this","prevProps","prevState","active","typeClass","blurStyle","blurClass","columnLeftClass","columnRightClass","getVideoDuration","getVideoProgressDuration","activeIndex","updateNewImage","netwrokd","findNetworkDataFromWebFilters","networkId","webFilters","className","feedId","style","V_EVENT","background","ThemeRule","transparent","backgroundColor","color","textAlign","type","file","src","postFileNew","data-link","link","data-load","data-network","data-postid","data-wall-id","Wall","data-owner-id","owner","data-item-id","data-tb","UserDetail","db_table","data-stories","stories","data-filter-id","filterId","onLoad","onError","e","IMG_LOAD_AFTER_COMPLETE_LAYOUT","backgroundImage","embed","indexOf","url","mediaUrl","height","width","controls","allowFullScreen","onProgress","onDuration","playing","muted","config","attributes","autoPlay","allow","frameBorder","data-type","data-activeData-id","IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP","cardColor","iconType","data-network-color","target","icon","iconColor","fontSize","CloudUrl","network","font","item","personalization","themeRule","ownerID","Component"],"mappings":"uOASMA,E,4MACFC,MAAQ,CACJC,GAAI,EAAKC,MAAMC,WAAWF,I,EAM9BG,gBAAkB,WACd,IAAQC,EAAe,EAAKL,MAApBK,WACAC,EAAW,EAAKJ,MAAhBI,OACR,EAAKC,SAAS,CAAEC,KAAM,YACtBC,YAAW,WACY,cAAfJ,GAA4B,EAAKE,SAAS,CAAEF,WAAW,GAAD,OAAKA,EAAL,YAA+D,IAA5CC,EAAOI,KAAKC,gBAAgBC,aAAqB,UAAY,QAC3I,M,EAQPC,WAAa,SAACC,GACV,IAAIC,EAAeC,SAASC,cAAc,iBACtCF,GAAcA,EAAaG,aAAa,eAAgBJ,I,uDApBhE,WAAqB,IAAD,OAChB,EAAmCK,KAAKjB,MAAhCG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,WACpBgB,KAAKZ,SAAS,CAAEF,aAAYJ,GAAIE,EAAWF,KAAM,kBAAM,EAAKG,uB,gCAUhE,SAAmBgB,EAAWC,GAAY,IAAD,OACrC,GAAID,EAAUjB,WAAWF,KAAOoB,EAAUpB,GAAI,CAC1C,IAAQI,EAA2Be,EAA3Bf,WAAYF,EAAeiB,EAAfjB,WACpBgB,KAAKZ,SAAS,CAAEF,aAAYJ,GAAIE,EAAWF,GAAIO,KAAM,GAAIc,OAAQ,KAAM,kBAAM,EAAKlB,wB,oBAS1F,WAEI,MAAoLe,KAAKjB,MAAjLC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,UAAWC,EAArD,EAAqDA,gBAAiBC,EAAtE,EAAsEA,iBAAkBrB,EAAxF,EAAwFA,OAAQsB,EAAhG,EAAgGA,iBAAkBC,EAAlH,EAAkHA,yBAAuCP,GAAzJ,EAA4IQ,YAA5I,EAAyJR,QAAQS,EAAjK,EAAiKA,eACzJ1B,EAAec,KAAKnB,MAApBK,WAEF2B,EAAWC,YAA8B9B,EAAW+B,UAAW5B,EAAO6B,YAC5E,OACI,oCACI,yBAAKlC,GAAE,iBAAYE,EAAWF,IAAMmC,UAAS,gBAAWjC,EAAWkC,OAAtB,0BAA8Cd,EAA9C,yDAAwGD,IAMxG,IAA5ChB,EAAOI,KAAKC,gBAAgBC,aAAqB,yBAAKwB,UAAU,8BAA8BE,MAAOC,IAAU,GAAK,CAAEC,WAAkD,IAAtClC,EAAOI,KAAK+B,UAAUC,YAA6D,IAAzCpC,EAAOI,KAAK+B,UAAUE,gBAA8C,GAAvBxC,EAAW+B,UAAgB,sFAAyFF,EAASY,MAAQtC,EAAOI,KAAK+B,UAAUE,gBAAwC,GAAtBxC,EAAW+B,UAAe,sFAAyFF,EAASY,SAAmB,KAEre,IAA5CtC,EAAOI,KAAKC,gBAAgBC,aAAqB,yBAAKwB,UAAU,iCAAiCE,MAAOd,IAAoB,KAI7H,yBAAKY,UAAU,QACX,yBAAKA,UAAWV,EAAiBY,MAAiC,IAAzBnC,EAAW+B,WAA4C,KAAzB/B,EAAW+B,UAAoB,CAAEW,UAAW,UAAa,KACtG,IAApB1C,EAAW2C,MAAkC,IAApB3C,EAAW2C,OAAe3C,EAAW4C,MAAQ,qCAErC,IAAzB5C,EAAW+B,WAA4C,KAAzB/B,EAAW+B,YAAsB,oCAC7D,yBAAKE,UAAS,qCAAgCX,GAAaa,MAAOd,IAElE,yBAAKwB,IAAK7C,EAAW8C,YAAab,UAAW/B,EAAY6C,YAAW/C,EAAWgD,KAAMC,YAAU,IAAIC,eAAclD,EAAW+B,UAAWoB,cAAanD,EAAWF,GAC3JsD,eAAcjD,EAAOI,KAAK8C,KAAKvD,GAAIwD,gBAAenD,EAAOI,KAAK8C,KAAKE,MAAOC,eAAcxD,EAAWF,GACnG2D,UAAStD,EAAOI,KAAKmD,WAAWC,SAChCC,eAAc5D,EAAW6D,QACzBC,iBAAgB9D,EAAW+D,SAC3BC,OAAQpC,EACRqC,QAAS,SAACC,GAAD,OAAOC,YAA+BD,OAG/B,IAAzBlE,EAAW+B,WAA4C,KAAzB/B,EAAW+B,WAAsB,oCAC9D,yBAAKE,UAAS,oCAA+BX,GAAaa,MAAOd,IACjE,yBAAKY,UAAW/B,EAAYiC,MAAO,CAAEiC,gBAAgB,OAAD,OAASpE,EAAW8C,YAApB,OAC/C9C,EAAWqE,UAIF,IAApBrE,EAAW2C,MAAkC,IAApB3C,EAAW2C,OAAe,oCAEjD,yBAAKV,UAAS,wCAAmCX,GAAaa,MAAOd,IACrE,yBAAKY,UAAW/B,EAAYiC,MAAOd,IAIN,IAApBrB,EAAW2C,MAAkC,IAApB3C,EAAW2C,OAAe,oCAE5C3C,EAAWgD,OAAShD,EAAWgD,KAAKsB,QAAQ,YAAc,GAAKtE,EAAWgD,KAAKsB,QAAQ,aAAe,IAEtG,kBAAC,IAAD,CAAaC,IAAG,UAAKvE,EAAWwE,UAAYC,OAAO,OAAOC,MAAM,OAAOC,UAAU,EAAMC,iBAAiB,EAAMC,WAAYnD,EAA0BoD,WAAYrD,EAAkBsD,SAAO,EACrLC,OAAK,EACLC,OAAQ,CACJrC,KAAM,CACFsC,WAAY,CACRC,UAAU,EACVH,OAAO,OAQvBhF,EAAWgD,MAAShD,EAAWgD,KAAKsB,QAAQ,UAAY,GACxD,kBAAC,IAAD,CAAaC,IAAG,UAAKvE,EAAWwE,UAAYC,OAAO,OAAOC,MAAM,OAAOC,UAAU,EAAMC,iBAAiB,EAAMC,WAAYnD,EAA0BoD,WAAYrD,EAAkBsD,SAAO,EACrLC,OAAK,EACLC,OAAQ,CACJrC,KAAM,CACFsC,WAAY,CACRC,UAAU,EACVH,OAAO,OASvBhF,EAAWgD,MAAShD,EAAWgD,KAAKsB,QAAQ,eAAiB,GAC7D,kBAAC,IAAD,CACIc,MAAM,2FACNvC,IAAG,UAAK7C,EAAWwE,UACnBI,gBAAgB,OAChBzC,MAAO,CAAEuC,MAAO,oBAMpB1E,EAAWgD,MAAUhD,EAAW+B,WAAqC,IAAxB/B,EAAW+B,WAAoB/B,EAAWgD,KAAKsB,QAAQ,OAAS,GAC7G,kBAAC,IAAD,CACIrC,UAAU,yBACVoD,YAAY,IACZD,MAAM,2FACNvC,IAAG,UAAK7C,EAAWwE,SAAhB,sBACHI,gBAAgB,OAChBzC,MAAO,CAAEuC,MAAO,kBAChBZ,iBAAgB9D,EAAW+D,SAC3BH,eAAc5D,EAAW6D,QACzByB,YAAU,QACVpC,eAAclD,EAAW+B,UACzBgB,YAAW/C,EAAWgD,KACtBuC,qBAAoBvF,EAAWF,GAC/BmD,YAAW,KAMdjD,EAAWgD,MAAgC,IAAxBhD,EAAW+B,aAAqB/B,EAAWwE,SAASF,QAAQ,uBAAyB,GAAKtE,EAAWgD,KAAKsB,QAAQ,aAAe,GAAKtE,EAAWgD,KAAKsB,QAAQ,YAAc,GAAKtE,EAAWgD,KAAKsB,QAAQ,WAAa,GAAKtE,EAAWgD,KAAKsB,QAAQ,aAAe,GAAKtE,EAAWgD,KAAKsB,QAAQ,cAAgB,IAAM,2BACrUQ,WAAYrD,EACZoD,WAAYnD,EACZmB,IAAG,UAAK7C,EAAWwE,UACnBW,UAAU,EACVH,OAAO,EACPf,QAAS,SAACC,GAAQsB,YAA0CtB,IAC5DoB,YAAU,QACV1B,eAAc5D,EAAW6D,QACzBX,eAAclD,EAAW+B,UACzB+B,iBAAgB9D,EAAW+D,SAC3BZ,cAAanD,EAAWF,GACxBiD,YAAW/C,EAAWgD,KACtBC,YAAW,EACXQ,UAAStD,EAAOI,KAAKmD,WAAWC,SAChCP,eAAcjD,EAAOI,KAAK8C,KAAKvD,GAAIwD,gBAAenD,EAAOI,KAAK8C,KAAKE,MAAOC,eAAcxD,EAAWF,SAS/H,yBAAKmC,UAAWT,GACZ,yBAAKS,UAAU,kBAAkBE,MAAO,CAAEK,gBAAiBrC,EAAOI,KAAK+B,UAAUmD,YAC7E,yBAAKxD,UAAU,qBACO,MAAjBJ,EAASlB,KAA+B,KAAhBkB,EAAS/B,IAAiD,IAAnCK,EAAOI,KAAK+B,UAAUoD,UAA8D,IAA5CvF,EAAOI,KAAKC,gBAAgBC,aAAsB,yBAAKwB,UAAU,cAAciB,eAAcrB,EAASlB,KAAMgF,qBAAoB9D,EAASY,OAC7N,uBAAGmD,OAAO,UACN,uBAAG3D,UAA0B,IAAfJ,EAAS/B,GAAT,qBAAkC+B,EAASgE,MAA3C,aAA0DhE,EAASgE,MAC7E1D,MAAO,CAAEM,MAAyC,GAAlCtC,EAAOI,KAAK+B,UAAUoD,SAAgBvF,EAAOI,KAAK+B,UAAUwD,UAAY,KAAMC,SAAU,YAKhH,yBAAK9D,UAAU,eACX,yBAAKY,IAAG,UAAKmD,IAAL,oBAAyBhG,EAAW+B,UAApC,WAEV,kBAAC,IAAD,CAAsBkE,QAASpE,EAAUqE,KAAM/F,EAAOI,KAAK+B,YAEjE,kBAAC,IAAD,CAAmB6D,KAAMnG,EAAYG,OAAQA,EAAQiG,gBAAiBjG,EAAOI,KAAKC,gBAAiB6F,UAAWlG,EAAOI,KAAK+B,UAAW2D,QAASpE,EAAUpB,aAAcN,EAAOI,KAAKC,gBAAgBC,aAAc6F,QAASnG,EAAOI,KAAK8C,KAAKE,QAC1O,4BAAI,kBAAC,IAAD,CAAe4C,KAAMnG,EAAYoG,gBAAiBjG,EAAOI,KAAKC,gBAAiB0F,KAAM/F,EAAOI,KAAK+B,UAAWE,gBAAiBX,EAASY,MAAOwD,QAASpE,e,GAxL1K0E,aAsML3G","file":"static/js/3.4fd2d3d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Iframe from 'react-iframe';\nimport ReactPlayer from 'react-player'\nimport NetworkCardComponent from '../../networkCardComponent'\nimport AuthorDetails from './../../sepcomponents/AuthorDetails'\nimport FontFamilyForPost from './../../sepcomponents/FontFamilyForPost'\nimport { API_ROOT_URL, CloudUrl, INSTAGRAM_IMAGE_BLANK, NO_CAMERA_IMAGE, V_EVENT } from './../../../constants'\nimport { IMG_LOAD_AFTER_COMPLETE_LAYOUT, IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP, findNetworkDataFromWebFilters } from '../../../utils'\n\nclass Posts extends Component {\n    state = {\n        id: this.props.activeData.id,\n    }\n    componentDidMount() {\n        const { mediaClass, activeData } = this.props;\n        this.setState({ mediaClass, id: activeData.id }, () => this.onZoomStyleLoad())\n    }\n    onZoomStyleLoad = () => {\n        const { mediaClass } = this.state;\n        const { newApi } = this.props;\n        this.setState({ fade: \"fade-in\" })\n        setTimeout(() => {\n            if (mediaClass === 'makeBgImg') this.setState({ mediaClass: `${mediaClass} ${newApi.wall.Personalization.signageTheme == 21 ? ' zoom2x' : ''}` })\n        }, 3000)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.activeData.id !== prevState.id) {\n            const { mediaClass, activeData } = prevProps;\n            this.setState({ mediaClass, id: activeData.id, fade: \"\", active: \"\" }, () => this.onZoomStyleLoad());\n        }\n    }\n    addNetwork = (name) => {\n        let scrlBarComan = document.querySelector(\".scrlBarComan\")\n        if (scrlBarComan) scrlBarComan.setAttribute(\"data-network\", name)\n    }\n\n\n    render() {\n       \n        const { activeData, typeClass, blurStyle, blurClass, columnLeftClass, columnRightClass, newApi, getVideoDuration, getVideoProgressDuration, activeIndex, active, updateNewImage } = this.props;\n        const { mediaClass } = this.state;\n\n        const netwrokd = findNetworkDataFromWebFilters(activeData.networkId, newApi.webFilters);\n        return (\n            <>\n                <div id={`\"postId${activeData.id}`} className={`feedId${activeData.feedId} postItem item ${typeClass} flatCard animated in autoBold appliedchLimit ${active}`} >\n\n\n              \n             \n\n                {newApi.wall.Personalization.signageTheme == 37 ? <div className=\"blur-bg tb_slide_bg_color__\" style={V_EVENT ? {} : { background: newApi.wall.ThemeRule.transparent === 0 ? newApi.wall.ThemeRule.backgroundColor == \"\" ?activeData.networkId ==2 ? 'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)' :  netwrokd.color : newApi.wall.ThemeRule.backgroundColor : activeData.networkId==2 ? 'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)' :  netwrokd.color }} ></div> : null}\n\n                    {newApi.wall.Personalization.signageTheme == 21 ? <div className=\"blur-bg tb_slide_bg_img_full__\" style={blurStyle}></div> : null}\n\n\n\n                    <div className=\"post\">\n                        <div className={columnLeftClass} style={(activeData.networkId === 2 || activeData.networkId === 18) ? { textAlign: 'center' } : {}}>\n                            {(activeData.type === 2 || activeData.type === 4) && activeData.file && <>\n                                {\n                                    ((activeData.networkId === 2 || activeData.networkId === 18)) && <>\n                                        <div className={` blur-bg tb_slide_bg_img__ ${blurClass}`} style={blurStyle}></div>\n\n                                        <img src={activeData.postFileNew} className={mediaClass} data-link={activeData.link} data-load=\"0\" data-network={activeData.networkId} data-postid={activeData.id}\n                                            data-wall-id={newApi.wall.Wall.id} data-owner-id={newApi.wall.Wall.owner} data-item-id={activeData.id}\n                                            data-tb={newApi.wall.UserDetail.db_table}\n                                            data-stories={activeData.stories}\n                                            data-filter-id={activeData.filterId}\n                                            onLoad={updateNewImage}\n                                            onError={(e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT(e)}\n                                        />\n                                    </>}\n                                {((activeData.networkId !== 2 && activeData.networkId !== 18)) && <>\n                                    <div className={`blur-bg tb_slide_bg_img__ ${blurClass}`} style={blurStyle}></div>\n                                    <div className={mediaClass} style={{ backgroundImage: `url(${activeData.postFileNew})` }} >\n                                        {activeData.embed}\n                                    </div>\n                                </>}\n                            </>}\n                            {(activeData.type === 3 || activeData.type === 5) && <>\n\n                                <div className={`blur-bg tb_slide_bg_img_vid__ ${blurClass}`} style={blurStyle}></div>\n                                <div className={mediaClass} style={blurStyle}>\n\n\n                                    {\n                                        (activeData.type === 3 || activeData.type === 5) && <>\n                                            {\n                                                activeData.link && (activeData.link.indexOf(\"youtube\") >= 0 || activeData.link.indexOf(\"youtu.be\") >= 0) &&\n\n                                                <ReactPlayer url={`${activeData.mediaUrl}`} height='100%' width='100%' controls={true} allowFullScreen={true} onProgress={getVideoProgressDuration} onDuration={getVideoDuration} playing\n                                                    muted\n                                                    config={{\n                                                        file: {\n                                                            attributes: {\n                                                                autoPlay: true,\n                                                                muted: true\n                                                            }\n                                                        }\n                                                    }} />\n                                            }\n\n\n                                            {\n                                                activeData.link && (activeData.link.indexOf(\"vimeo\") >= 0) &&\n                                                <ReactPlayer url={`${activeData.mediaUrl}`} height='100%' width='100%' controls={true} allowFullScreen={true} onProgress={getVideoProgressDuration} onDuration={getVideoDuration} playing\n                                                    muted\n                                                    config={{\n                                                        file: {\n                                                            attributes: {\n                                                                autoPlay: true,\n                                                                muted: false\n                                                            }\n                                                        }\n                                                    }} />\n                                            }\n\n\n                                            {\n\n                                                activeData.link && (activeData.link.indexOf(\"soundcloud\") >= 0) &&\n                                                <Iframe\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                    src={`${activeData.mediaUrl}`}\n                                                    allowFullScreen=\"true\"\n                                                    style={{ width: \"100%!important\" }}\n                                                ></Iframe>\n\n                                            }\n\n                                            {\n                                                activeData.link && ((activeData.networkId && activeData.networkId == 30) && activeData.link.indexOf(\"vk\") >= 0) &&\n                                                <Iframe\n                                                    className=\"tb-detail-image-iframe\"\n                                                    frameBorder=\"0\"\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                    src={`${activeData.mediaUrl}&autoplay=1&mute=1`}\n                                                    allowFullScreen=\"true\"\n                                                    style={{ width: \"100%!important\" }}\n                                                    data-filter-id={activeData.filterId}\n                                                    data-stories={activeData.stories}\n                                                    data-type=\"video\"\n                                                    data-network={activeData.networkId}\n                                                    data-link={activeData.link}\n                                                    data-activeData-id={activeData.id}\n                                                    data-load={0}\n                                                ></Iframe>\n\n                                            }\n\n                                            {\n                                                (activeData.link || activeData.networkId == 29) && (activeData.mediaUrl.indexOf(\"onsiteupload/video\") >= 0 || activeData.link.indexOf(\"linkedin\") >= 0 || activeData.link.indexOf(\"twitter\") >= 0 || activeData.link.indexOf(\"tumblr\") >= 0 || activeData.link.indexOf(\"facebook\") >= 0 || activeData.link.indexOf(\"instagram\") >= 0) && <video\n                                                    onDuration={getVideoDuration}\n                                                    onProgress={getVideoProgressDuration}\n                                                    src={`${activeData.mediaUrl}`}\n                                                    autoPlay={true}\n                                                    muted={true}\n                                                    onError={(e) => { IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP(e) }}\n                                                    data-type=\"video\"\n                                                    data-stories={activeData.stories}\n                                                    data-network={activeData.networkId}\n                                                    data-filter-id={activeData.filterId}\n                                                    data-postid={activeData.id}\n                                                    data-link={activeData.link}\n                                                    data-load={0}\n                                                    data-tb={newApi.wall.UserDetail.db_table}\n                                                    data-wall-id={newApi.wall.Wall.id} data-owner-id={newApi.wall.Wall.owner} data-item-id={activeData.id}\n                                                ></video>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            </>}\n                        </div>\n\n                        <div className={columnRightClass}>\n                            <div className=\"postContentCard\" style={{ backgroundColor: newApi.wall.ThemeRule.cardColor }}>\n                                <div className=\"postContentClasic\">\n                                    {netwrokd.name != null ? netwrokd.id === 20 || (newApi.wall.ThemeRule.iconType === 1 && newApi.wall.Personalization.signageTheme == 21) ? <div className=\"postNetwork\" data-network={netwrokd.name} data-network-color={netwrokd.color}>\n                                        <a target=\"_blank\">\n                                            <i className={netwrokd.id == 20 ? `tb_icon fa ${netwrokd.icon}` : `fa ${netwrokd.icon}`}\n                                                style={{ color: newApi.wall.ThemeRule.iconType == 1 ? newApi.wall.ThemeRule.iconColor : null, fontSize: \"50px\" }}\n                                            >\n                                            </i>\n                                        </a>\n                                    </div> :\n                                        <div className=\"postNetwork\">\n                                            <img src={`${CloudUrl}/network/${activeData.networkId}.png`} />\n                                        </div>\n                                        : <NetworkCardComponent network={netwrokd} font={newApi.wall.ThemeRule} />\n                                    }\n                                    <FontFamilyForPost item={activeData} newApi={newApi} personalization={newApi.wall.Personalization} themeRule={newApi.wall.ThemeRule} network={netwrokd} signageTheme={newApi.wall.Personalization.signageTheme} ownerID={newApi.wall.Wall.owner} />\n                                    <h4><AuthorDetails item={activeData} personalization={newApi.wall.Personalization} font={newApi.wall.ThemeRule} backgroundColor={netwrokd.color} network={netwrokd} /></h4>\n                                </div>\n\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div >\n\n            </>\n        )\n    }\n}\nexport default Posts;"],"sourceRoot":""}