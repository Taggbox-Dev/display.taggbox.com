{"version":3,"sources":["displayThemes/components/themes/SlideShow/post.js"],"names":["Posts","state","id","props","activeData","onZoomStyleLoad","mediaClass","newApi","setState","fade","setTimeout","wall","Personalization","signageTheme","addNetwork","name","scrlBarComan","document","querySelector","setAttribute","this","prevProps","prevState","active","typeClass","blurStyle","blurClass","columnLeftClass","columnRightClass","getVideoDuration","getVideoProgressDuration","activeIndex","updateNewImage","netwrokd","findNetworkDataFromWebFilters","networkId","webFilters","className","feedId","style","V_EVENT","backgroundColor","ThemeRule","transparent","color","textAlign","type","file","src","postFileNew","data-link","link","data-load","data-network","data-postid","data-wall-id","Wall","data-item-id","data-tb","UserDetail","db_table","data-stories","stories","data-filter-id","filterId","onLoad","onError","e","IMG_LOAD_AFTER_COMPLETE_LAYOUT","backgroundImage","embed","indexOf","url","mediaUrl","height","width","controls","allowFullScreen","onProgress","onDuration","playing","muted","config","attributes","autoPlay","allow","frameBorder","data-type","data-activeData-id","IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP","cardColor","iconType","data-network-color","target","icon","iconColor","fontSize","CloudUrl","network","font","item","personalization","themeRule","ownerID","owner","Component"],"mappings":"uOASMA,E,4MACFC,MAAQ,CACJC,GAAI,EAAKC,MAAMC,WAAWF,I,EAM9BG,gBAAkB,WACd,IAAQC,EAAe,EAAKL,MAApBK,WACAC,EAAW,EAAKJ,MAAhBI,OACR,EAAKC,SAAS,CAAEC,KAAM,YACtBC,YAAW,WACY,cAAfJ,GAA4B,EAAKE,SAAS,CAAEF,WAAW,GAAD,OAAKA,EAAL,YAA+D,IAA5CC,EAAOI,KAAKC,gBAAgBC,aAAqB,UAAY,QAC3I,M,EAQPC,WAAa,SAACC,GACV,IAAIC,EAAeC,SAASC,cAAc,iBACtCF,GAAcA,EAAaG,aAAa,eAAgBJ,I,uDApBhE,WAAqB,IAAD,OAChB,EAAmCK,KAAKjB,MAAhCG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,WACpBgB,KAAKZ,SAAS,CAAEF,aAAYJ,GAAIE,EAAWF,KAAM,kBAAM,EAAKG,uB,gCAUhE,SAAmBgB,EAAWC,GAAY,IAAD,OACrC,GAAID,EAAUjB,WAAWF,KAAOoB,EAAUpB,GAAI,CAC1C,IAAQI,EAA2Be,EAA3Bf,WAAYF,EAAeiB,EAAfjB,WACpBgB,KAAKZ,SAAS,CAAEF,aAAYJ,GAAIE,EAAWF,GAAIO,KAAM,GAAIc,OAAQ,KAAM,kBAAM,EAAKlB,wB,oBAS1F,WAEI,MAAoLe,KAAKjB,MAAjLC,EAAR,EAAQA,WAAYoB,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,UAAWC,EAArD,EAAqDA,gBAAiBC,EAAtE,EAAsEA,iBAAkBrB,EAAxF,EAAwFA,OAAQsB,EAAhG,EAAgGA,iBAAkBC,EAAlH,EAAkHA,yBAAuCP,GAAzJ,EAA4IQ,YAA5I,EAAyJR,QAAQS,EAAjK,EAAiKA,eACzJ1B,EAAec,KAAKnB,MAApBK,WAEF2B,EAAWC,YAA8B9B,EAAW+B,UAAW5B,EAAO6B,YAC5E,OACI,oCACI,yBAAKlC,GAAE,iBAAYE,EAAWF,IAAMmC,UAAS,gBAAWjC,EAAWkC,OAAtB,0BAA8Cd,EAA9C,yDAAwGD,IAIpG,IAA5ChB,EAAOI,KAAKC,gBAAgBC,aAAqB,yBAAKwB,UAAU,8BAA8BE,MAAOC,IAAU,GAAK,CAAEC,gBAAuD,IAAtClC,EAAOI,KAAK+B,UAAUC,YAA6D,IAAzCpC,EAAOI,KAAK+B,UAAUD,gBAAwBR,EAASW,MAAQrC,EAAOI,KAAK+B,UAAUD,gBAAkBR,EAASW,SAAmB,KAExQ,IAA5CrC,EAAOI,KAAKC,gBAAgBC,aAAqB,yBAAKwB,UAAU,iCAAiCE,MAAOd,IAAoB,KAI7H,yBAAKY,UAAU,QACX,yBAAKA,UAAWV,EAAiBY,MAAiC,IAAzBnC,EAAW+B,WAA4C,KAAzB/B,EAAW+B,UAAoB,CAAEU,UAAW,UAAa,KACtG,IAApBzC,EAAW0C,MAAkC,IAApB1C,EAAW0C,OAAe1C,EAAW2C,MAAQ,qCAErC,IAAzB3C,EAAW+B,WAA4C,KAAzB/B,EAAW+B,YAAsB,oCAC7D,yBAAKE,UAAS,qCAAgCX,GAAaa,MAAOd,IAElE,yBAAKuB,IAAK5C,EAAW6C,YAAaZ,UAAW/B,EAAY4C,YAAW9C,EAAW+C,KAAMC,YAAU,IAAIC,eAAcjD,EAAW+B,UAAWmB,cAAalD,EAAWF,GAC3JqD,eAAchD,EAAOI,KAAK6C,KAAKtD,GAAIuD,eAAcrD,EAAWF,GAC5DwD,UAASnD,EAAOI,KAAKgD,WAAWC,SAChCC,eAAczD,EAAW0D,QACzBC,iBAAgB3D,EAAW4D,SAC3BC,OAAQjC,EACRkC,QAAS,SAACC,GAAD,OAAOC,YAA+BD,OAG/B,IAAzB/D,EAAW+B,WAA4C,KAAzB/B,EAAW+B,WAAsB,oCAC9D,yBAAKE,UAAS,oCAA+BX,GAAaa,MAAOd,IACjE,yBAAKY,UAAW/B,EAAYiC,MAAO,CAAE8B,gBAAgB,OAAD,OAASjE,EAAW6C,YAApB,OAC/C7C,EAAWkE,UAIF,IAApBlE,EAAW0C,MAAkC,IAApB1C,EAAW0C,OAAe,oCAEjD,yBAAKT,UAAS,wCAAmCX,GAAaa,MAAOd,IACrE,yBAAKY,UAAW/B,EAAYiC,MAAOd,IAIN,IAApBrB,EAAW0C,MAAkC,IAApB1C,EAAW0C,OAAe,oCAE5C1C,EAAW+C,OAAS/C,EAAW+C,KAAKoB,QAAQ,YAAc,GAAKnE,EAAW+C,KAAKoB,QAAQ,aAAe,IAEtG,kBAAC,IAAD,CAAaC,IAAG,UAAKpE,EAAWqE,UAAYC,OAAO,OAAOC,MAAM,OAAOC,UAAU,EAAMC,iBAAiB,EAAMC,WAAYhD,EAA0BiD,WAAYlD,EAAkBmD,SAAO,EACrLC,OAAK,EACLC,OAAQ,CACJnC,KAAM,CACFoC,WAAY,CACRC,UAAU,EACVH,OAAO,OAQvB7E,EAAW+C,MAAS/C,EAAW+C,KAAKoB,QAAQ,UAAY,GACxD,kBAAC,IAAD,CAAaC,IAAG,UAAKpE,EAAWqE,UAAYC,OAAO,OAAOC,MAAM,OAAOC,UAAU,EAAMC,iBAAiB,EAAMC,WAAYhD,EAA0BiD,WAAYlD,EAAkBmD,SAAO,EACrLC,OAAK,EACLC,OAAQ,CACJnC,KAAM,CACFoC,WAAY,CACRC,UAAU,EACVH,OAAO,OASvB7E,EAAW+C,MAAS/C,EAAW+C,KAAKoB,QAAQ,eAAiB,GAC7D,kBAAC,IAAD,CACIc,MAAM,2FACNrC,IAAG,UAAK5C,EAAWqE,UACnBI,gBAAgB,OAChBtC,MAAO,CAAEoC,MAAO,oBAMpBvE,EAAW+C,MAAU/C,EAAW+B,WAAqC,IAAxB/B,EAAW+B,WAAoB/B,EAAW+C,KAAKoB,QAAQ,OAAS,GAC7G,kBAAC,IAAD,CACIlC,UAAU,yBACViD,YAAY,IACZD,MAAM,2FACNrC,IAAG,UAAK5C,EAAWqE,SAAhB,sBACHI,gBAAgB,OAChBtC,MAAO,CAAEoC,MAAO,kBAChBZ,iBAAgB3D,EAAW4D,SAC3BH,eAAczD,EAAW0D,QACzByB,YAAU,QACVlC,eAAcjD,EAAW+B,UACzBe,YAAW9C,EAAW+C,KACtBqC,qBAAoBpF,EAAWF,GAC/BkD,YAAW,KAMdhD,EAAW+C,MAAgC,IAAxB/C,EAAW+B,aAAqB/B,EAAWqE,SAASF,QAAQ,uBAAyB,GAAKnE,EAAW+C,KAAKoB,QAAQ,aAAe,GAAKnE,EAAW+C,KAAKoB,QAAQ,YAAc,GAAKnE,EAAW+C,KAAKoB,QAAQ,WAAa,GAAKnE,EAAW+C,KAAKoB,QAAQ,aAAe,GAAKnE,EAAW+C,KAAKoB,QAAQ,cAAgB,IAAM,2BACrUQ,WAAYlD,EACZiD,WAAYhD,EACZkB,IAAG,UAAK5C,EAAWqE,UACnBW,UAAU,EACVH,OAAO,EACPf,QAAS,SAACC,GAAQsB,YAA0CtB,IAC5DoB,YAAU,QACV1B,eAAczD,EAAW0D,QACzBT,eAAcjD,EAAW+B,UACzB4B,iBAAgB3D,EAAW4D,SAC3BV,cAAalD,EAAWF,GACxBgD,YAAW9C,EAAW+C,KACtBC,YAAW,EACXM,UAASnD,EAAOI,KAAKgD,WAAWC,SAChCL,eAAchD,EAAOI,KAAK6C,KAAKtD,GAAIuD,eAAcrD,EAAWF,SASxF,yBAAKmC,UAAWT,GACZ,yBAAKS,UAAU,kBAAkBE,MAAO,CAAEE,gBAAiBlC,EAAOI,KAAK+B,UAAUgD,YAC7E,yBAAKrD,UAAU,qBACO,MAAjBJ,EAASlB,KAA+B,KAAhBkB,EAAS/B,IAAiD,IAAnCK,EAAOI,KAAK+B,UAAUiD,UAA8D,IAA5CpF,EAAOI,KAAKC,gBAAgBC,aAAsB,yBAAKwB,UAAU,cAAcgB,eAAcpB,EAASlB,KAAM6E,qBAAoB3D,EAASW,OAC7N,uBAAGiD,OAAO,UACN,uBAAGxD,UAA0B,IAAfJ,EAAS/B,GAAT,qBAAkC+B,EAAS6D,MAA3C,aAA0D7D,EAAS6D,MAC7EvD,MAAO,CAAEK,MAAyC,GAAlCrC,EAAOI,KAAK+B,UAAUiD,SAAgBpF,EAAOI,KAAK+B,UAAUqD,UAAY,KAAMC,SAAU,YAKhH,yBAAK3D,UAAU,eACX,yBAAKW,IAAG,UAAKiD,IAAL,oBAAyB7F,EAAW+B,UAApC,WAEV,kBAAC,IAAD,CAAsB+D,QAASjE,EAAUkE,KAAM5F,EAAOI,KAAK+B,YAEjE,kBAAC,IAAD,CAAmB0D,KAAMhG,EAAYG,OAAQA,EAAQ8F,gBAAiB9F,EAAOI,KAAKC,gBAAiB0F,UAAW/F,EAAOI,KAAK+B,UAAWwD,QAASjE,EAAUpB,aAAcN,EAAOI,KAAKC,gBAAgBC,aAAc0F,QAAShG,EAAOI,KAAK6C,KAAKgD,QAC1O,4BAAI,kBAAC,IAAD,CAAeJ,KAAMhG,EAAYiG,gBAAiB9F,EAAOI,KAAKC,gBAAiBuF,KAAM5F,EAAOI,KAAK+B,UAAWD,gBAAiBR,EAASW,MAAOsD,QAASjE,e,GAtL1KwE,aAoMLzG","file":"static/js/3.fe2e5f33.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Iframe from 'react-iframe';\nimport ReactPlayer from 'react-player'\nimport NetworkCardComponent from '../../networkCardComponent'\nimport AuthorDetails from './../../sepcomponents/AuthorDetails'\nimport FontFamilyForPost from './../../sepcomponents/FontFamilyForPost'\nimport { API_ROOT_URL, CloudUrl, INSTAGRAM_IMAGE_BLANK, NO_CAMERA_IMAGE, V_EVENT } from './../../../constants'\nimport { IMG_LOAD_AFTER_COMPLETE_LAYOUT, IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP, findNetworkDataFromWebFilters } from '../../../utils'\n\nclass Posts extends Component {\n    state = {\n        id: this.props.activeData.id,\n    }\n    componentDidMount() {\n        const { mediaClass, activeData } = this.props;\n        this.setState({ mediaClass, id: activeData.id }, () => this.onZoomStyleLoad())\n    }\n    onZoomStyleLoad = () => {\n        const { mediaClass } = this.state;\n        const { newApi } = this.props;\n        this.setState({ fade: \"fade-in\" })\n        setTimeout(() => {\n            if (mediaClass === 'makeBgImg') this.setState({ mediaClass: `${mediaClass} ${newApi.wall.Personalization.signageTheme == 21 ? ' zoom2x' : ''}` })\n        }, 3000)\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.activeData.id !== prevState.id) {\n            const { mediaClass, activeData } = prevProps;\n            this.setState({ mediaClass, id: activeData.id, fade: \"\", active: \"\" }, () => this.onZoomStyleLoad());\n        }\n    }\n    addNetwork = (name) => {\n        let scrlBarComan = document.querySelector(\".scrlBarComan\")\n        if (scrlBarComan) scrlBarComan.setAttribute(\"data-network\", name)\n    }\n\n\n    render() {\n       \n        const { activeData, typeClass, blurStyle, blurClass, columnLeftClass, columnRightClass, newApi, getVideoDuration, getVideoProgressDuration, activeIndex, active, updateNewImage } = this.props;\n        const { mediaClass } = this.state;\n\n        const netwrokd = findNetworkDataFromWebFilters(activeData.networkId, newApi.webFilters);\n        return (\n            <>\n                <div id={`\"postId${activeData.id}`} className={`feedId${activeData.feedId} postItem item ${typeClass} flatCard animated in autoBold appliedchLimit ${active}`} >\n\n\n\n                    {newApi.wall.Personalization.signageTheme == 37 ? <div className=\"blur-bg tb_slide_bg_color__\" style={V_EVENT ? {} : { backgroundColor: newApi.wall.ThemeRule.transparent === 0 ? newApi.wall.ThemeRule.backgroundColor == \"\" ? netwrokd.color : newApi.wall.ThemeRule.backgroundColor : netwrokd.color }} ></div> : null}\n\n                    {newApi.wall.Personalization.signageTheme == 21 ? <div className=\"blur-bg tb_slide_bg_img_full__\" style={blurStyle}></div> : null}\n\n\n\n                    <div className=\"post\">\n                        <div className={columnLeftClass} style={(activeData.networkId === 2 || activeData.networkId === 18) ? { textAlign: 'center' } : {}}>\n                            {(activeData.type === 2 || activeData.type === 4) && activeData.file && <>\n                                {\n                                    ((activeData.networkId === 2 || activeData.networkId === 18)) && <>\n                                        <div className={` blur-bg tb_slide_bg_img__ ${blurClass}`} style={blurStyle}></div>\n\n                                        <img src={activeData.postFileNew} className={mediaClass} data-link={activeData.link} data-load=\"0\" data-network={activeData.networkId} data-postid={activeData.id}\n                                            data-wall-id={newApi.wall.Wall.id} data-item-id={activeData.id}\n                                            data-tb={newApi.wall.UserDetail.db_table}\n                                            data-stories={activeData.stories}\n                                            data-filter-id={activeData.filterId}\n                                            onLoad={updateNewImage}\n                                            onError={(e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT(e)}\n                                        />\n                                    </>}\n                                {((activeData.networkId !== 2 && activeData.networkId !== 18)) && <>\n                                    <div className={`blur-bg tb_slide_bg_img__ ${blurClass}`} style={blurStyle}></div>\n                                    <div className={mediaClass} style={{ backgroundImage: `url(${activeData.postFileNew})` }} >\n                                        {activeData.embed}\n                                    </div>\n                                </>}\n                            </>}\n                            {(activeData.type === 3 || activeData.type === 5) && <>\n\n                                <div className={`blur-bg tb_slide_bg_img_vid__ ${blurClass}`} style={blurStyle}></div>\n                                <div className={mediaClass} style={blurStyle}>\n\n\n                                    {\n                                        (activeData.type === 3 || activeData.type === 5) && <>\n                                            {\n                                                activeData.link && (activeData.link.indexOf(\"youtube\") >= 0 || activeData.link.indexOf(\"youtu.be\") >= 0) &&\n\n                                                <ReactPlayer url={`${activeData.mediaUrl}`} height='100%' width='100%' controls={true} allowFullScreen={true} onProgress={getVideoProgressDuration} onDuration={getVideoDuration} playing\n                                                    muted\n                                                    config={{\n                                                        file: {\n                                                            attributes: {\n                                                                autoPlay: true,\n                                                                muted: true\n                                                            }\n                                                        }\n                                                    }} />\n                                            }\n\n\n                                            {\n                                                activeData.link && (activeData.link.indexOf(\"vimeo\") >= 0) &&\n                                                <ReactPlayer url={`${activeData.mediaUrl}`} height='100%' width='100%' controls={true} allowFullScreen={true} onProgress={getVideoProgressDuration} onDuration={getVideoDuration} playing\n                                                    muted\n                                                    config={{\n                                                        file: {\n                                                            attributes: {\n                                                                autoPlay: true,\n                                                                muted: false\n                                                            }\n                                                        }\n                                                    }} />\n                                            }\n\n\n                                            {\n\n                                                activeData.link && (activeData.link.indexOf(\"soundcloud\") >= 0) &&\n                                                <Iframe\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                    src={`${activeData.mediaUrl}`}\n                                                    allowFullScreen=\"true\"\n                                                    style={{ width: \"100%!important\" }}\n                                                ></Iframe>\n\n                                            }\n\n                                            {\n                                                activeData.link && ((activeData.networkId && activeData.networkId == 30) && activeData.link.indexOf(\"vk\") >= 0) &&\n                                                <Iframe\n                                                    className=\"tb-detail-image-iframe\"\n                                                    frameBorder=\"0\"\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                    src={`${activeData.mediaUrl}&autoplay=1&mute=1`}\n                                                    allowFullScreen=\"true\"\n                                                    style={{ width: \"100%!important\" }}\n                                                    data-filter-id={activeData.filterId}\n                                                    data-stories={activeData.stories}\n                                                    data-type=\"video\"\n                                                    data-network={activeData.networkId}\n                                                    data-link={activeData.link}\n                                                    data-activeData-id={activeData.id}\n                                                    data-load={0}\n                                                ></Iframe>\n\n                                            }\n\n                                            {\n                                                (activeData.link || activeData.networkId == 29) && (activeData.mediaUrl.indexOf(\"onsiteupload/video\") >= 0 || activeData.link.indexOf(\"linkedin\") >= 0 || activeData.link.indexOf(\"twitter\") >= 0 || activeData.link.indexOf(\"tumblr\") >= 0 || activeData.link.indexOf(\"facebook\") >= 0 || activeData.link.indexOf(\"instagram\") >= 0) && <video\n                                                    onDuration={getVideoDuration}\n                                                    onProgress={getVideoProgressDuration}\n                                                    src={`${activeData.mediaUrl}`}\n                                                    autoPlay={true}\n                                                    muted={true}\n                                                    onError={(e) => { IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP(e) }}\n                                                    data-type=\"video\"\n                                                    data-stories={activeData.stories}\n                                                    data-network={activeData.networkId}\n                                                    data-filter-id={activeData.filterId}\n                                                    data-postid={activeData.id}\n                                                    data-link={activeData.link}\n                                                    data-load={0}\n                                                    data-tb={newApi.wall.UserDetail.db_table}\n                                                    data-wall-id={newApi.wall.Wall.id} data-item-id={activeData.id}\n                                                ></video>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            </>}\n                        </div>\n\n                        <div className={columnRightClass}>\n                            <div className=\"postContentCard\" style={{ backgroundColor: newApi.wall.ThemeRule.cardColor }}>\n                                <div className=\"postContentClasic\">\n                                    {netwrokd.name != null ? netwrokd.id === 20 || (newApi.wall.ThemeRule.iconType === 1 && newApi.wall.Personalization.signageTheme == 21) ? <div className=\"postNetwork\" data-network={netwrokd.name} data-network-color={netwrokd.color}>\n                                        <a target=\"_blank\">\n                                            <i className={netwrokd.id == 20 ? `tb_icon fa ${netwrokd.icon}` : `fa ${netwrokd.icon}`}\n                                                style={{ color: newApi.wall.ThemeRule.iconType == 1 ? newApi.wall.ThemeRule.iconColor : null, fontSize: \"50px\" }}\n                                            >\n                                            </i>\n                                        </a>\n                                    </div> :\n                                        <div className=\"postNetwork\">\n                                            <img src={`${CloudUrl}/network/${activeData.networkId}.png`} />\n                                        </div>\n                                        : <NetworkCardComponent network={netwrokd} font={newApi.wall.ThemeRule} />\n                                    }\n                                    <FontFamilyForPost item={activeData} newApi={newApi} personalization={newApi.wall.Personalization} themeRule={newApi.wall.ThemeRule} network={netwrokd} signageTheme={newApi.wall.Personalization.signageTheme} ownerID={newApi.wall.Wall.owner} />\n                                    <h4><AuthorDetails item={activeData} personalization={newApi.wall.Personalization} font={newApi.wall.ThemeRule} backgroundColor={netwrokd.color} network={netwrokd} /></h4>\n                                </div>\n\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div >\n\n            </>\n        )\n    }\n}\nexport default Posts;"],"sourceRoot":""}